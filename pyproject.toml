[project]
name = "organization-parser-bot"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiocache>=0.12.3",
    "aiogram-dialog>=2.3.1",
    "aiohttp>=3.11.11",
    "alembic>=1.14.1",
    "asyncly>=0.3.3",
    "asyncpg>=0.30.0",
    "dishka>=1.4.2",
    "sentry-sdk>=2.20.0",
    "sqlalchemy>=2.0.37",
    "structlog>=25.1.0",
]

[dependency-groups]
dev = [
    "dirty-equals>=0.9.0",
    "mypy>=1.14.1",
    "polyfactory>=2.18.1",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "ruff>=0.9.2",
]


[tool.pytest.ini_options]
asyncio_mode = "auto"
python_files = "test_*"
python_functions = "test_*"
python_classes = "TestSuite*"
addopts = "-p no:cacheprovider"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
fail_under = 70
show_missing = true
skip_covered = false
skip_empty = true
omit = [
    "*/migrations/*",
    "*/__main__.py",
]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == __main__:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "pass",
]

[tool.coverage.run]
branch = true
source = ["organization_parser"]
command_line = "-m pytest"

[tool.coverage.xml]
output = "coverage.xml"

[tool.ruff]
line-length = 88
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
]
indent-width = 4
target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
select = [
    "BLE",
    "C90",
    "E",
    "F",
    "G",
    "I",
    "ICN",
    "ISC",
    "PLE",
    "Q",
    "RUF006",
    "RUF100",
    "T10",
    "T20",
    "TID",
    "UP",
    "W",
]
ignore = ["ISC001"]
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["organization_parser", "tests"]

[tool.mypy]
plugins = ["pydantic.mypy"]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = false
no_implicit_optional = true

[[tool.mypy.overrides]]
module = [
    "aiocache.*",
]
ignore_missing_imports = true
